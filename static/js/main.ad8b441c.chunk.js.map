{"version":3,"sources":["Shortener.js","App.js","index.js"],"names":["FETCH_URL","gql","Shortener","props","result","useQuery","skip","match","variables","url","params","shorturl","loading","error","data","console","log","urlshortner","length","long_url","App","process","basename","exact","path","component","window","location","href","client","ApolloClient","link","createHttpLink","uri","headers","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"0bAIA,IAAMA,EAAYC,IAAH,KA4BAC,EApBG,SAAAC,GAAU,IAOtBC,EAPqB,EACQC,YAASL,EAAW,CACnDM,MAAOH,EAAMI,MACbC,UAAW,CACTC,IAAKN,EAAMI,MAAMG,OAAOC,YAHpBC,EADiB,EACjBA,QAASC,EADQ,EACRA,MAAOC,EADC,EACDA,KAOxB,GAAIF,EACFR,EAAS,eACJ,GAAIS,EACTE,QAAQC,IAAI,aAAcH,GAC1BT,EAAS,aACJ,GAAIU,GAAQA,EAAKG,aAAeH,EAAKG,YAAYC,OACjCJ,EAAKG,YAAY,GAA9BE,SAGV,OAAO,6BAAMf,ICDAgB,EAvBH,WAMV,OAFAL,QAAQC,IAAI,qCAAsCK,OAGhD,kBAAC,IAAD,CAAeC,SAAUD,OACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,OAAK,EACLC,KAAK,IACLC,UAAW,WAET,OADAC,OAAOC,SAASC,KAAO,uBAChB,QAGX,kBAAC,IAAD,CAAOJ,KAAK,aAAaC,UAAWvB,OCbtC2B,EAAS,IAAIC,IAAa,CAC9BC,KAAMC,YAAe,CACnBC,IAAKZ,6DACLa,QAAS,CACP,wBAAyBb,uBACzB,eAAgB,sBAGpBc,MAAO,IAAIC,MAGbC,IAASC,OACP,kBAAC,IAAD,CAAgBT,OAAQA,GACtB,kBAAC,EAAD,OAEFU,SAASC,eAAe,W","file":"static/js/main.ad8b441c.chunk.js","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst FETCH_URL = gql`\n  query urlShortner($url: String!) {\n    urlshortner(where: { short_url: { _eq: $url } }) {\n      long_url\n    }\n  }\n`;\n\nconst Shortener = props => {\n  const { loading, error, data } = useQuery(FETCH_URL, {\n    skip: !props.match,\n    variables: {\n      url: props.match.params.shorturl\n    }\n  });\n  let result;\n  if (loading) {\n    result = \"Loading\";\n  } else if (error) {\n    console.log(\"TCL: error\", error);\n    result = \"Error\";\n  } else if (data && data.urlshortner && data.urlshortner.length) {\n    const { long_url } = data.urlshortner[0];\n    // window.location.href = long_url;\n  }\n  return <div>{result}</div>;\n};\n\nexport default Shortener;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Shortener from \"./Shortener\";\n// import createHistory from \"history/createBrowserHistory\";\n\nconst App = () => {\n  // const history = createHistory({\n  //   basename: process.env.PUBLIC_URL\n  // });\n  console.log(\"TCL: App -> process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={() => {\n            window.location.href = \"https://vishwas.tech\";\n            return null;\n          }}\n        />\n        <Route path=\"/:shorturl\" component={Shortener} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport App from \"./App\";\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n    uri: process.env.REACT_APP_HASURA_ENDPOINT,\n    headers: {\n      \"x-hasura-admin-secret\": process.env.REACT_APP_HASURA_SECRET,\n      \"content-type\": \"application/json\"\n    }\n  }),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}